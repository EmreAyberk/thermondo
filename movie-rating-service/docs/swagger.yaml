definitions:
  request.CreateMovie:
    properties:
      description:
        type: string
      director:
        type: string
      genre:
        type: string
      title:
        type: string
      year:
        type: integer
    required:
    - director
    - title
    type: object
  request.CreateRating:
    properties:
      review:
        type: string
      score:
        maximum: 5
        minimum: 0
        type: number
    required:
    - score
    type: object
  request.CreateUser:
    properties:
      address:
        type: string
      email:
        type: string
      is_admin:
        type: boolean
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      surname:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - surname
    - username
    type: object
  request.Login:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UpdateMovie:
    properties:
      description:
        type: string
      director:
        type: string
      genre:
        type: string
      id:
        type: integer
      title:
        type: string
      year:
        type: integer
    required:
    - director
    - title
    type: object
  request.UpdateRating:
    properties:
      review:
        type: string
      score:
        maximum: 5
        minimum: 0
        type: number
    required:
    - score
    type: object
  response.CreateMovie:
    properties:
      id:
        type: integer
    type: object
  response.CreateRating:
    properties:
      id:
        type: integer
    type: object
  response.CreateUser:
    properties:
      id:
        type: integer
    type: object
  response.ErrorResponse:
    properties:
      cause:
        type: string
      message:
        type: string
      success:
        type: string
    type: object
  response.GetMovie:
    properties:
      description:
        type: string
      director:
        type: string
      genre:
        type: string
      rating:
        type: number
      rating_count:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
  response.GetUser:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      name:
        type: string
      phone:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  response.GetUserRatings:
    properties:
      ratings:
        items:
          $ref: '#/definitions/response.Ratings'
        type: array
    type: object
  response.RatedMovie:
    properties:
      description:
        type: string
      director:
        type: string
      genre:
        type: string
      rating:
        type: number
      title:
        type: string
      year:
        type: integer
    type: object
  response.Rating:
    properties:
      review:
        type: string
      score:
        type: number
    type: object
  response.Ratings:
    properties:
      rated_movie:
        $ref: '#/definitions/response.RatedMovie'
      rating:
        $ref: '#/definitions/response.Rating'
    type: object
  response.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: string
    type: object
  response.UpdateRating:
    properties:
      id:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: movieratingservice
  version: "1.0"
paths:
  /login:
    post:
      parameters:
      - description: User login payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login
      tags:
      - User
  /movie:
    post:
      parameters:
      - description: Movie create payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateMovie'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.CreateMovie'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create Movie
      tags:
      - Movie
  /movie/{id}:
    delete:
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Movie
      tags:
      - Movie
    get:
      parameters:
      - description: Movie Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.GetMovie'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: GetByID Movie
      tags:
      - Movie
    put:
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      - description: Movie update payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateMovie'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Movie
      tags:
      - Movie
  /movie/{id}/rating:
    delete:
      parameters:
      - description: Movie Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Rating
      tags:
      - Rating
    patch:
      parameters:
      - description: Movie Id
        in: path
        name: id
        required: true
        type: string
      - description: Rating update payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRating'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateRating'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Rating
      tags:
      - Rating
    post:
      parameters:
      - description: Movie Id
        in: path
        name: id
        required: true
        type: string
      - description: Rating create payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateRating'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.CreateRating'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Rating
      tags:
      - Rating
  /rating/user:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.GetUserRatings'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: GetUserRatings User
      tags:
      - Rating
  /user:
    post:
      parameters:
      - description: User create payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateUser'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.CreateUser'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create User
      tags:
      - User
  /user/{id}:
    get:
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.GetUser'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: GetByID User
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
